# Redirect HTTP to HTTPS
server {
    # Listen on port 80 (HTTP) for all IP addresses
    listen 80 default_server;
    listen [::]:80 default_server;

    # Fake server name matches any domain because this is the "default_server".
    server_name _;

    # Return a 301 redirect to HTTPS with the same request as received here.
    return 301 https://$host$request_uri;
}

# Handle HTTPS requests for the application
server {
    # List on port 443 (HTTPS) for all IP addresses
    listen 443 ssl;
    listen [::]:443;

    # Specify all domain names that represent the application
    server_name example.com www.example.com; 
    #           ^^^^^^^^^^^ ^^^^^^^^^^^^^^^ CHANGE THIS!!

    # SSL certificates obtained by Let's Encrypt
    ssl_certificate   /etc/letsencrypt/live/www.example.com/fullchain.pem;
    #                         CHANGE THIS!! ^^^^^^^^^^^^^^^ 
    ssl_certificate_key /etc/letsencrypt/live/www.example.com/privkey.pem;
    #                           CHANGE THIS!! ^^^^^^^^^^^^^^^
    
    # GZIP must be disabled for SSL traffic because it is a security risk.
    # See: https://bugs.debian.org/773332
    gzip off;
    
    # Default settings to avoid random file access if proxy setup is wrong.
    root /opt/feather/www;
    index index.html index.htm index.nginx-debian.html;

    # Pass all requests to the Feather application
    location / {
        # Pass on headers so Hunchentoot gets the correct information
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        # Common Lisp application listens at this address
        proxy_pass http://127.0.0.1:8080;
    }
}

